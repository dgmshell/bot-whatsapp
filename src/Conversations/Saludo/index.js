import { Flow } from "../../Flow/Flow.js";
import {OneLineMessage} from "../../Flow/utils/OneLineMessage.js";
import {Answer} from "../../Flow/Answer.js";

// === CLASES DE RESPUESTA ===

export class AskName extends Answer {
    waitForAnswer = true;
    async handler(ctx) {
        const nombre = ctx.body.trim();
        ctx.useMemo(ctx.phoneNumber, 'name', nombre);
        await ctx.reply(`Gracias, ${nombre}. Â¿PodrÃ­as proporcionarme tu nÃºmero de telÃ©fono?`);
    }
}

export class AskPhone extends Answer {
    waitForAnswer = true;
    async handler(ctx) {
        const telefono = ctx.body.trim();
        ctx.useMemo(ctx.phoneNumber, 'telefono', telefono);
        await ctx.reply("Perfecto. Ahora indÃ­came tu correo electrÃ³nico.");
    }
}

export class AskEmail extends Answer {
    waitForAnswer = true;
    async handler(ctx) {
        const email = ctx.body.trim();
        ctx.useMemo(ctx.phoneNumber, 'email', email);
        await ctx.reply("âœ… Registro completado. Un momento por favor...");
    }
}

// === FLUJOS EN ORDEN CORRECTO ===

export const FlowBienvenidaRRHH = new Flow()
    .addAnswer(`Hola {name} ðŸ‘¤, tus datos han sido registrados correctamente.`)
    .addAnswer(`ðŸ“ž TelÃ©fono: {telefono}\nðŸ“§ Correo: {email}`)
    .addAnswer("El equipo de RRHH te contactarÃ¡ pronto o podrÃ¡s continuar con otros trÃ¡mites.")
    .setName("BienvenidaRRHH");

export const FlowAskEmail = new Flow()
    .addAnswer(AskEmail)
    .setName("CapturaCorreo")
    .setNextFlow(FlowBienvenidaRRHH);

export const FlowAskPhone = new Flow()
    .addAnswer(AskPhone)
    .setName("CapturaTelÃ©fono")
    .setNextFlow(FlowAskEmail);

export const FlowSaludo = new Flow()
    .addKeyboard(['hola', 'buenas', 'buen dÃ­a', 'que onda', 'hello'])
    .addAnswer('ðŸ‘‹ Bienvenido al sistema de Recursos Humanos.')
    .addAnswer('Â¿CuÃ¡l es tu nombre completo?')
    .addAnswer(AskName)
    .setName("Saludo")
    .setNextFlow(FlowAskPhone);
